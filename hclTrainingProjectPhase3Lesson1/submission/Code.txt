package com.search;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class SearchApplication {
	
	public static void main(String[] args) {
		SpringApplication.run(SearchApplication.class, args);
	}

}

--------------------------------------------------------

package com.search.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.search.model.User;
import com.search.service.UserService;

@Controller
public class SearchController {

	@Autowired
	private UserService userService;

	@GetMapping("/search")
	public ModelAndView getUser() {
		return new ModelAndView("search");
	}
	
	@PostMapping("/search")
	public String searchValid(@RequestParam("id") int id) {
		return "redirect:/view/" + id;
	}
	
	@GetMapping("/view/{id}")
	public ModelAndView view(@PathVariable("id") int id) {
		User user = userService.getUserById(id);
		if (user != null) {
			return new ModelAndView("/view").addObject("user", user);
		}
		return new ModelAndView("error");
	}
	
	@GetMapping("/edit")
	public ModelAndView showUser(@RequestParam("id") int id, ModelMap model) {
		User user = userService.getUserById(id);
		model.put("user", user);
		return new ModelAndView("edit");
	}
	
	@PostMapping("/edit")
	public String saveUser(@RequestParam("id") int id, @RequestParam("name") String name) {
		User user = userService.getUserById(id);
		user.setName(name);
		userService.modifyUser(user);
		return "redirect:/view/" + id;
	}
}

--------------------------------------------------------

package com.search.dao;

import java.util.List;

import com.search.model.User;

public interface UserDAO {
	
	public User getUserById(Integer id);
	
	public List<User> getAllUsers();

	public void addUser(User user);
	
	public void modifyUser(User user);
	
	public void deleteUser(Integer id);
}

--------------------------------------------------------

package com.search.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.transaction.Transactional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.search.model.User;

@Repository
public class UserDAOImpl implements UserDAO {

	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@Autowired
	EntityManager sf;
	
	public void addUser(User user) {
		sf.persist(user);
	}

	public List<User> getAllUsers() {
		@SuppressWarnings("unchecked")
		List<User> users = sf.createQuery("from User").getResultList();
		return users;
	}

	@Transactional
	public void modifyUser(User user) {
		sf.persist(user);
	}

	public void deleteUser(Integer id) {
		User user = getUserById(id);
		sf.remove(user);
	}

	public User getUserById(Integer id) {
		logger.info("getUserbyId -> {}", id);
		User user = sf.find(User.class, id);
		return user;
	}

}

--------------------------------------------------------

package com.search.model;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class User {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	private String name;
	
	public User() {
		super();
	}

	public User(String name) {
		super();
		this.name = name;
	}
	
	public int getId() {
		return id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
}

--------------------------------------------------------

package com.search.service;

import java.util.List;

import com.search.model.User;

public interface UserService {
	
	public User getUserById(Integer id);
	
	public List<User> getAllUsers();
	
	public void addUser(User user);

	public void modifyUser(User user);
	
	public void deleteUser(Integer id);
}

--------------------------------------------------------

package com.search.service;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.search.dao.UserDAO;
import com.search.model.User;

@Service
@Transactional
public class UserServiceImpl implements UserService {

	@Autowired
	private UserDAO uD;
	
	@Override
	public User getUserById(Integer id) {
		return uD.getUserById(id);
	}

	@Override
	public List<User> getAllUsers() {
		return uD.getAllUsers();
	}

	@Override
	public void addUser(User user) {
		uD.addUser(user);
	}
	
	@Override
	public void modifyUser(User user) {
		uD.modifyUser(user);
	}
	
	@Override
	public void deleteUser(Integer id) {
		uD.deleteUser(id);
	}
}

--------------------------------------------------------

spring.datasource.url=jdbc:mysql://localhost:3306/hcl
spring.datasource.username=root
spring.datasource.password=root

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

spring.jpa.hibernate.ddl-auto=update

--------------------------------------------------------

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"
    %>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Edit</title>
</head>
<body>
	<form method="post" action="/edit">
		Id: <input type="text" name="id" value=${user.getId()} readonly="readonly"> <br>
		Name: <input type="text" name="name" value=${user.getName()}> </br> </br>
		<button type="submit">Save</button> 
		<button>Cancel</button> 
	</form>
</body>
</html>

--------------------------------------------------------

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Error</title>
</head>
<body>
	<h3 style="color: red">This user does not exist in the system</h3>
</body>
</html>

--------------------------------------------------------

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Search</title>
</head>
<body>
	<h3>User Search</h3>
	<form method="post">
		User ID: <input type="text" name="id" required="required"></br>
		<input type="submit" value="Search">
	</form>
</body>
</html>

--------------------------------------------------------

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
      
	
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>View</title>
</head>
<body>
	ID: ${user.getId()} </br>
	Name: ${user.getName()} </br>
	<a href="/edit?id=${user.getId()}">Edit</a>
	<a href="/search">Go back</a>

</body>
</html>

---------------------------------------------------------
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.1</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com</groupId>
	<artifactId>search</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>hclTrainingProjectPhase3Lesson1</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
